var webpack = require('webpack');
// var path = require('path');

module.exports = {

  // context: __dirname + "/app",

  //单服务器
  //entry: './src/main.js',
  //双服务器
  entry: [
    'webpack-dev-server/client?http://localhost:8080',//资源服务器地址
    // 'webpack/hot/dev-server',// 在 HMR 更新失败之后会刷新整个页面
    'webpack/hot/only-dev-server', //如果你想自己刷新页面, 可以改用
    './src/main.js'
  ],

  output: {
    //单服务器
    //publicPath: 'dist/',
    //双服务器
    publicPath: 'http://localhost:8080/static',//生成静态资源的url
    path: __dirname + "/dist",
    // path: './dist',
    filename: 'build.js'
  },
  //双服务器
  plugins: [
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': '"development"',
      __DEBUG__: true
    }),
    // new webpack.HotModuleReplacementPlugin(),
    // new HtmlWebpackPlugin({
    //     template: './src/a.html',
    //     filename: 'a',
    //     inject: 'body',
    //     chunks: ['vendors', 'a']
    // })
  ],
  // devServer: { 
  //   port: 8080, 
  //   proxy: { 
  //     "/api/*": "http://localhost:9090/scgl" 
  //   } 
  // },
  module: {
    loaders: [
      { test: /\.vue$/, loader: 'vue' },
      { test: /\.less$/, loader: 'style-loader!css-loader!less-loader' }, // 用 ! 来连接多个人 loader
      { test: /\.css$/, loader: 'style-loader!css-loader' },
      // 内联 base64 URLs, 限定 <=10k 的图片, 其他的用 URL
      {test: /\.(png|jpg)$/, loader: 'url-loader?limit=10000&name=build/assets/[name].[ext]'}
      // { test: /\.(png|jpg|gif)$/, loader: 'file?name=[name].[ext]?[hash]'}
    ]
  },
  // example: if you wish to apply custom babel options
  // instead of using vue-loader's default:
  babel: {
    presets: ['es2015', 'stage-0'],
    plugins: ['transform-runtime']
  }
}

if (process.env.NODE_ENV === 'production') {
  module.exports.plugins = [
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: '"production"'
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      compress: {
        warnings: false
      }
    }),
    new webpack.optimize.OccurenceOrderPlugin()
  ]
} else {
  module.exports.devtool = '#source-map'
}
